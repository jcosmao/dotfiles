# Configuration for Alacritty, the GPU enhanced terminal emulator.

# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty itself.
env:
  # TERM variable
  #
  # This value is used to set the `$TERM` environment variable for
  # each instance of Alacritty. If it is not present, alacritty will
  # check the local terminfo database and use `alacritty` if it is
  # available, otherwise `xterm-256color` is used.
  TERM: xterm-256color

window:
  # Window dimensions (changes require restart)
  #
  # Specified in number of columns/lines, not pixels.
  # If both are `0`, this setting is ignored.
  #dimensions:
  #  columns: 0
  #  lines: 0

  # Window position (changes require restart)
  #
  # Specified in number of pixels.
  # If the position is not set, the window manager will handle the placement.
  #position:
  #  x: 0
  #  y: 0

  # Window padding (changes require restart)
  #
  # Blank space added around the window in pixels. This padding is scaled
  # by DPI and the specified value is always added at both opposing sides.
  padding:
    x: 2
    y: 2

  # Spread additional padding evenly around the terminal content.
  dynamic_padding: false

  # Window decorations
  #
  # Values for `decorations`:
  #     - full: Borders and title bar
  #     - none: Neither borders nor title bar
  #
  # Values for `decorations` (macOS only):
  #     - transparent: Title bar, transparent background and title bar buttons
  #     - buttonless: Title bar, transparent background, but no title bar buttons
  #decorations: full

  # Startup Mode (changes require restart)
  #
  # Values for `startup_mode`:
  #   - Windowed
  #   - Maximized
  #   - Fullscreen
  #
  # Values for `startup_mode` (macOS only):
  #   - SimpleFullscreen
  #startup_mode: Windowed

  # Window title
  title: Alacritty

  # Window class (Linux/BSD only):
  class:
    # Application instance name
    instance: Alacritty
    # General application class
    general: Alacritty

  # GTK theme variant (Linux/BSD only)
  #
  # Override the variant of the GTK theme. Commonly supported values are `dark` and `light`.
  # Set this to `None` to use the default theme variant.
  #gtk_theme_variant: None

scrolling:
  # Maximum number of lines in the scrollback buffer.
  # Specifying '0' will disable scrolling.
  history: 5000

  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  #multiplier: 3

  # Scroll to the bottom when new text is written to the terminal.
  #auto_scroll: false

# Spaces per Tab (changes require restart)
#
# This setting defines the width of a tab in cells.
#
# Some applications, like Emacs, rely on knowing about the width of a tab.
# To prevent unexpected behavior in these applications, it's also required to
# change the `it` value in terminfo when altering this setting.
#tabspaces: 8

# Font configuration (fc-list)
font:
  normal:
    # Font family
    family: JetBrains Mono
    # family: Hack
    # family: FiraMono Nerd Font
    # family: DejaVu Sans Mono
    style: Regular

  bold:
    style: Bold

  italic:
    style: Italic

  bold_italic:
    style: Italic

  # Point size
  size: 10

  # Offset is the extra space around each character. `offset.y` can be thought of
  # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
  offset:
    x: 0
    y: 0

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increasing `x` moves the glyph to the right,
  # increasing `y` moves the glyph upwards.
  #glyph_offset:
  #  x: 0
  #  y: 0

  # Thin stroke font rendering (macOS only)
  #
  # Thin strokes are suitable for retina displays, but for non-retina screens
  # it is recommended to set `use_thin_strokes` to `false`
  #
  # macOS >= 10.14.x:
  #
  # If the font quality on non-retina display looks bad then set
  # `use_thin_strokes` to `true` and enable font smoothing by running the
  # following command:
  #   `defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO`
  #
  # This is a global setting and will require a log out or restart to take
  # effect.
  #use_thin_strokes: true

# If `true`, bold text is drawn using the bright color variants.
draw_bold_text_with_bright_colors: true

colors:
  primary:
    background: '0x181818'
    foreground: '0xdfbf8e'

  normal:
    black:   '0x251f19'
    red:     '0xea6962'
    green:   '0xa9b665'
    yellow:  '0xe78a4e'
    blue:    '0x7daea3'
    magenta: '0xd3869b'
    cyan:    '0x89b482'
    white:   '0xdfbf8e'

  bright:
    black:   '0x928374'
    red:     '0xea6962'
    green:   '0xa9b665'
    yellow:  '0xe3a84e'
    blue:    '0x7daea3'
    magenta: '0xd3869b'
    cyan:    '0x89b482'
    white:   '0xdfbf8e'


# Bindings are always filled by default, but will be replaced when a new
# binding with the same triggers is defined. To unset a default binding, it can
# be mapped to the `ReceiveChar` action. Alternatively, you can use `None` for
# a no-op if you do not wish to receive input characters for that binding.
key_bindings:
  - { key: V,         mods: Control|Shift, action: Paste                      }
  - { key: C,         mods: Control|Shift, action: Copy                       }
  - { key: Insert,    mods: Shift,         action: PasteSelection             }
  - { key: Key0,      mods: Control,       action: ResetFontSize              }
  - { key: Equals,    mods: Control,       action: IncreaseFontSize           }
  - { key: Plus,      mods: Control,       action: IncreaseFontSize           }
  - { key: Minus,     mods: Control,       action: DecreaseFontSize           }
  - { key: F11,       mods: None,          action: ToggleFullscreen           }
  - { key: Paste,     mods: None,          action: Paste                      }
  - { key: Copy,      mods: None,          action: Copy                       }
  - { key: L,         mods: Control,       action: ClearLogNotice             }
  - { key: L,         mods: Control,       chars: "\x0c"                      }
  - { key: PageUp,    mods: Shift,          action: ScrollPageUp,   mode: ~Alt }
  - { key: PageDown,  mods: Shift,          action: ScrollPageDown, mode: ~Alt }
  - { key: Home,      mods: Shift,         action: ScrollToTop,    mode: ~Alt }
  - { key: End,       mods: Shift,         action: ScrollToBottom, mode: ~Alt }
